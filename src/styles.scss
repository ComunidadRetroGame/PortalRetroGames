@font-face {
    font-family: BIG_ARCADE;
    src: url('/assets/font/ARCADE_I.TTF');
}

@font-face {
    font-family: arcade;
    src: url('/assets/font/ARCADE.TTF');
}

$ease-out-quint: cubic-bezier(0.230, 1.000, 0.320, 1.000);
$ease-in-quint: cubic-bezier(0.755, 0.050, 0.855, 0.060);
$screen-background: #121010;


body {
    background-color: black;
    font-family: "Press Start 2P";
}

#switch {
    display: none;
}

.nes-input {
    color: #111;
}

.switch-label {
    display: inline-block;
    cursor: pointer;
    background: #fff;
    color: #111;
    padding: 10px;
    padding-left: 15px;
    padding-right: 15px;
    border-radius: 5px;
    margin-top: 10px;
    box-shadow: 0 2px #666;

    &::after {
        content: "on";
    }

    &::before {
        content: " ";
        display: inline-block;
        border-radius: 100%;
        width: 10px;
        height: 10px;
        background: #003321;
        margin-right: 10px;
        border: 1px solid #111;
    }

    &:active {
        box-shadow: none;
        transform: translate3d(0, 2px, 0);
    }
}

#switch:checked+.switch-label {
    &::before {
        background: #22ff55;
    }

    &::after {
        content: "off";
    }
}


@keyframes flicker {
    $steps: 20;

    @for $i from 0 through $steps {
        #{percentage($i*(calc(1 / $steps)))} {
            opacity: random();
        }
    }
}

.container {
    background: $screen-background;

    min-width: 98% !important;

    position: relative;

    // flicker
    &::after {
        content: " ";
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        background: transparentize($screen-background, 0.9);
        opacity: 0;
        z-index: 2;
        pointer-events: none;
    }

    // scanlines
    &::before {
        content: " ";
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        background: linear-gradient(transparentize($screen-background, 1) 50%, transparentize(darken($screen-background, 10), 0.75) 50%), linear-gradient(90deg, transparentize(#ff0000, 0.94), transparentize(#00ff00, 0.98), transparentize(#0000ff, 0.94));
        z-index: 2;
        background-size: 100% 2px, 3px 100%;
        pointer-events: none;
    }
}

#switch:checked~.container::after {
    animation: flicker 0.15s infinite;
}


@keyframes turn-on {
    0% {
        transform: scale(1, 0.8) translate3d(0, 0, 0);
        -webkit-filter: brightness(30);
        filter: brightness(30);
        opacity: 1;
    }

    3.5% {
        transform: scale(1, 0.8) translate3d(0, 100%, 0);
    }

    3.6% {
        transform: scale(1, 0.8) translate3d(0, -100%, 0);
        opacity: 1;
    }

    9% {
        transform: scale(1.3, 0.6) translate3d(0, 100%, 0);
        -webkit-filter: brightness(30);
        filter: brightness(30);
        opacity: 0;
    }



    11% {
        transform: scale(1, 1) translate3d(0, 0, 0);
        -webkit-filter: contrast(0) brightness(0);
        filter: contrast(0) brightness(0);
        opacity: 0;
    }

    100% {
        transform: scale(1, 1) translate3d(0, 0, 0);
        -webkit-filter: contrast(1) brightness(1.2) saturate(1.3);
        filter: contrast(1) brightness(1.2) saturate(1.3);
        opacity: 1;
    }
}

@keyframes turn-off {
    0% {
        transform: scale(1, 1.3) translate3d(0, 0, 0);
        -webkit-filter: brightness(1);
        filter: brightness(1);
        opacity: 1;
    }

    60% {
        transform: scale(1.3, 0.001) translate3d(0, 0, 0);
        -webkit-filter: brightness(10);
        filter: brightness(10);
    }

    100% {
        animation-timing-function: $ease-in-quint;
        transform: scale(0.000, 0.0001) translate3d(0, 0, 0);
        -webkit-filter: brightness(50);
        filter: brightness(50);
    }
}

.screen {
    border: none;
}

#switch~.container>.screen {
    animation: turn-off 0.55s $ease-out-quint;
    animation-fill-mode: forwards;
}

#switch:checked~.container>.screen {
    animation: turn-on 4s linear;
    animation-fill-mode: forwards;
}

@keyframes overlay-anim {
    0% {
        visibility: hidden;
    }

    20% {
        visibility: hidden;
    }

    21% {
        visibility: visible;
    }

    100% {
        visibility: hidden;
    }
}

.overlay {
    color: #00FF00;
    position: absolute;
    top: 20px;
    left: 20px;
    font-size: 60px;
    //text-shadow:2px 2px black,-2px -2px black, -2px 2px black, 2px -2px black;
    visibility: hidden;
    pointer-events: none;
}

#switch:checked~.container .overlay {
    animation: overlay-anim 5s linear;
    animation-fill-mode: forwards;
}



/* LIST OF FURTHER IMPROVEMENTS */

// 1. settings: direction of moving scanlines (currently: only bottom to top)
// 2. settings: number of moving scanlines (currently: 0 or 1)
// 3. settings: delay between 2 moving scanlines
// 4. check css validity with keyframes 0% without second step

/*
currently working on :
calculation draft for keyframes steps

$scan-moving-duration: 3s;
$scan-moving-delay: 7s;

total time = 10s (duration + delay)
keyframes :
    0%: wait
    15%: start moving
    85%: end moving & start waiting
    100% : wait

(the rest later)

*/



/* REGULAR SCANLINES SETTINGS */

// width of 1 scanline (min.: 1px)
$scan-width: 2px;

// emulates a damage-your-eyes bad pre-2000 CRT screen ♥ (true, false)
$scan-crt: true;

// frames-per-second (should be > 1), only applies if $scan-crt: true;
$scan-fps: 60;

// scanline-color (rgba)
$scan-color: rgba(#000, .3);

// set z-index on 8, like in ♥ 8-bits ♥, or…
// set z-index on 2147483648 or more to enable scanlines on Chrome fullscreen (doesn't work in Firefox or IE);
$scan-z-index: 2147483648;

/* MOVING SCANLINE SETTINGS */

// moving scanline (true, false)
$scan-moving-line: true;

// opacity of the moving scanline
$scan-opacity: .75;

/* MIXINS */

// apply CRT animation: @include scan-crt($scan-crt);
@mixin scan-crt($scan-crt) {
    @if $scan-crt ==true {
        animation: scanlines 1s steps($scan-fps) infinite;
    }

    @else {
        animation: none;
    }
}

// apply CRT animation: @include scan-crt($scan-crt);
@mixin scan-moving($scan-moving-line) {
    @if $scan-moving-line ==true {
        animation: scanline 6s linear infinite;
    }

    @else {
        animation: none;
    }
}

/* CSS .scanlines CLASS */

.scanlines {
    position: relative;
    overflow: hidden; // only to animate the unique scanline

    &:before,
    &:after {
        display: block;
        pointer-events: none;
        content: '';
        position: absolute;
    }

    // unique scanline travelling on the screen
    &:before {
        // position: absolute;
        // bottom: 100%;
        width: 100%;
        height: $scan-width * 1;
        z-index: $scan-z-index + 1;
        background: $scan-color;
        opacity: $scan-opacity;
        // animation: scanline 6s linear infinite;
        @include scan-moving($scan-moving-line);
    }

    // the scanlines, so!
    &:after {
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        z-index: $scan-z-index;
        background: linear-gradient(to bottom,
                transparent 50%,
                $scan-color 51%);
        background-size: 100% $scan-width*2;
        @include scan-crt($scan-crt);
    }
}

/* ANIMATE UNIQUE SCANLINE */
@keyframes scanline {
    0% {
        transform: translate3d(0, 200000%, 0);
        // bottom: 0%; // to have a continuous scanline move, use this line (here in 0% step) instead of transform and write, in &:before, { position: absolute; bottom: 100%; }
    }
}

@keyframes scanlines {
    0% {
        background-position: 0 50%;
        // bottom: 0%; // to have a continuous scanline move, use this line (here in 0% step) instead of transform and write, in &:before, { position: absolute; bottom: 100%; }
    }
}


/* PRESENTATION STUFF */

a {
    display: block;
    padding: 1em;
    margin: 0 auto;
    width: 80%;
    color: rgba(#fff, .5);
    text-transform: uppercase;
    text-decoration: none;
    background: rgba(#000, .8);
    border: 1px solid rgba(#fff, .5);

    &#togglescanlines {
        position: absolute;
        width: 182px;
        top: 300px;
        right: 58px;
        border-width: 10px;
        background: rgba(#000, .4);
    }

    &:hover {
        color: #fff;
    }
}

nav {
    float: right;
    width: 350px;
    text-align: center;
}

ul {
    display: inline-block;
    margin: 0;
    list-style-type: none;
    padding: 0;

    &.scanlines {
        position: absolute;
    }

    iframe,
    video,
    .jpg {
        width: calc(100vw - 350px);
        height: 95vh;
        border: none;
    }

    li {
        /*        display: none;

        &:target {
            display: inline-block;
        }*/
    }
}

.jpg {
    background: url('https://pompompom.mehdi.cc/crt-art-for-scanlines.jpg') no-repeat;
    background-size: cover;
}

body {
    position: relative;
    background: #1b1b1b;
    color: #c8c8c8;
    text-shadow: 2px 2px 2px #333;
    overflow-x: scroll;
}